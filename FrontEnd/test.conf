server {
  listen 80;
  listen [::]:80;

  server_name i7b306.p.ssafy.io;

  location / {
        proxy_pass http://127.0.0.1:3000;
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection 'upgrade';
#       proxy_set_header Host $host;
#       proxy_cache_bypass $http_upgrade;
  }

#  return 301 https://i7b306.p.ssafy.io$request_uri; # http 요청을 모두 https로 redirect
}

server {
  listen 443 ssl http2;
  listen [::]:443;
  server_name i7b306.p.ssafy.io;

  # ssl 인증서 적용
  ssl_certificate /etc/letsencrypt/live/i7b306.p.ssafy.io/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/i7b306.p.ssafy.io/privkey.pem;

  location / {
    proxy_pass http://127.0.0.1;

    root /var/www/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  location /api { # location 이후 특정 url을 처리하는 방법을 정의(여기서는 / -> 즉, 모든 request)
    proxy_pass http://127.0.0.1:8081/api;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # 웹 소켓 설정
    proxy_set_header Connection "upgrade";
    proxy_set_header Upgrade $http_upgrade;
  }

  location /ov {
    proxy_pass http://127.0.0.1:8443;
  }
}

server {
  if ($host = i7b306.p.ssafy.io) {
    return 301 https://$host$request_uri;
  } # managed by Certbot

    return 404; # managed by Certbot
}

#server {
#       listen 3000;
#       listen [::]:3000;
#       server_name i7b306.p.ssafy.io;

#       location / {
#               root /usr/share/nginx/html;
#               index index.html index.html;
#               try_files $uri $uri/ /index.html;
#       }
#}
